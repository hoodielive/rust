#+TITLE: Rust Notes 

** Data Types in Rust 
*** Booleans
    + Booleans are true or false 
      #+BEGIN_SRC rust
         let x = true; 
         let x2: bool = true; 
         let y = false; 
         let y2 =  x && true; 
         println!("y is {}", y); 
      #+END_SRC
*** Characters
    + Characters are not 8 bit unsigned integers like in C
    + Rather, they are unicode scalars, meaning Rust fully support unicode out of the box
      #+BEGIN_SRC rust
          let c: char = "A"; 
          let d: char = "â™¥"; 
      #+END_SRC
*** Integers 
    + Rust has several integer types:
     #+BEGIN_SRC rust
         let e: i16 = -356; 
         let f: u16 = 1029; 
         let g: i32 = -31337;
         let h: u32 = 42949672; 
         let j: i64 = -4294967295; 
         let k: u64 = 18446744973709551615;
     #+END_SRC
    + There are also architecture sized types
    + These are 32 bits on 32 bit machines, and 64 bits on 64 bit machines 
    #+BEGIN_SRC rust
         let i: isize  = -1; 
         let m: usize = 1; 
    #+END_SRC
*** Floating-Point Integers
*** Arrays
*** Slices
*** Tuples
*** Functions


